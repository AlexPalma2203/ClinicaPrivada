<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VCxNZbrUAAAAAElFTkSuQmCC
</value>
  </data>
</root>